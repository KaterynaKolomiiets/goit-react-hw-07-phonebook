{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","redux/contacts/contacts-selectors.js","services/contacts-api.js","redux/contacts/contacts-operations.js","components/ContactList/ContactList.jsx","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","updateState","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","s","form","this","autoComplete","type","pattern","title","required","input","onChange","button","Component","setFilter","createAction","Filter","dispatch","useDispatch","filter","ContactListItem","id","onDelete","li","onClick","getItems","contacts","items","getFilter","addContact","axios","post","then","res","data","catch","err","console","log","removeContact","delete","fetchPhoneBookContacts","createAsyncThunk","a","get","addPhoneBookContact","item","removePhoneBookContact","ContactList","useSelector","toLowerCase","includes","ul","map","v4","App","useEffect","some","alert","itemsReducer","createReducer","fulfilled","_","action","payload","filterReducer","error","rejected","pending","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36fb0aa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__1r8_2\",\"button\":\"ContactListItem_button__2o60Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__rrkmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__3wbO0\"};","import React, { Component } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={s.input}\r\n            onChange={this.updateState}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={s.input}\r\n            onChange={this.updateState}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default ContactForm;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contact/add\");\r\nexport const deleteContact = createAction(\"contact/delete\");\r\nexport const setFilter = createAction(\"set/filter\");\r\n","import s from \"./Filter.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const search = ({ target: { value } }) => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <input className={s.filter} type=\"text\" name=\"filter\" onChange={search} />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst ContactListItem = ({ props : {name, number, id}, onDelete }) => {\r\n\r\n  return (\r\n    <li className={s.li} id={id}>\r\n      <span>{name}:</span>\r\n      <span>{number}</span>\r\n      <button type=\"button\" className={s.button} onClick={() => onDelete(id)\r\n}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  props: PropTypes.shape ({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import axios from \"axios\";\r\n\r\nexport const fetchContacts = () => {\r\n  return axios\r\n    .get(\"http://localhost:4040/contacts\")\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const addContact = ({ name, number, id }) => {\r\n  return axios\r\n    .post(\"http://localhost:4040/contacts\", { name, number, id })\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const removeContact = (id) => {\r\n  return axios\r\n    .delete(`http://localhost:4040/contacts/${id}`)\r\n    .then(() => id)\r\n    .catch((err) => console.log(err));\r\n};\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  removeContact,\r\n} from \"../../services/contacts-api\";\r\n\r\nexport const fetchPhoneBookContacts = createAsyncThunk(\r\n  \"contacts/fetchPhoneBookContacts\",\r\n  async () => {\r\n    const contacts = await fetchContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addPhoneBookContact = createAsyncThunk(\r\n  \"contacts/addPhoneBookContact\",\r\n  async (props) => {\r\n    const item = await addContact(props);\r\n    return item;\r\n  }\r\n);\r\n\r\nexport const removePhoneBookContact = createAsyncThunk(\r\n  \"contacts/removePhoneBookContact\",\r\n  async (id) => {\r\n    const item = await removeContact(id);\r\n    return item;\r\n  }\r\n);\r\n","import s from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport { v4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getItems, getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport { removePhoneBookContact } from \"../../redux/contacts/contacts-operations\";\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(getItems);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  let contacts = items.filter((item) =>\r\n    item.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <ul className={s.ul}>\r\n      {contacts.map((item) => (\r\n        <ContactListItem\r\n          key={v4()}\r\n          props={item}\r\n          onDelete={() => dispatch(removePhoneBookContact(item.id))}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useEffect } from \"react\";\nimport { v4 } from \"uuid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getItems } from \"./redux/contacts/contacts-selectors\";\nimport {\n  fetchPhoneBookContacts,\n  addPhoneBookContact,\n} from \"./redux/contacts/contacts-operations\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(getItems);\n\n  useEffect(() => {\n    dispatch(fetchPhoneBookContacts());\n  }, [dispatch]);\n\n  const formSubmitHandler = ({ name, number }) => {\n    if (items.some((item) => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is alerady in your contacts`);\n      return;\n    }\n    dispatch(addPhoneBookContact({ id: v4(), name, number }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { setFilter } from \"./contacts-actions\";\r\nimport {\r\n  fetchPhoneBookContacts,\r\n  addPhoneBookContact,\r\n  removePhoneBookContact,\r\n} from \"./contacts-operations\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchPhoneBookContacts.fulfilled]: (_, action) => action.payload,\r\n  [addPhoneBookContact.fulfilled]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [removePhoneBookContact.fulfilled]: (state, action) =>\r\n    [...state].filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer([], {\r\n  [fetchPhoneBookContacts.rejected]: (_, action) => action.payload,\r\n  [fetchPhoneBookContacts.pending]: () => null,\r\n  [addPhoneBookContact.rejected]: (_, action) => action.payload,\r\n  [addPhoneBookContact.pending]: () => null,\r\n  [removePhoneBookContact.rejected]: (_, action) => action.payload,\r\n  [removePhoneBookContact.pending]: () => null,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  error: error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducers\";\r\n\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1KVFI\",\"input\":\"ContactForm_input__kPt5H\"};"],"sourceRoot":""}